<UserControl x:Class="RizaWpfEditor.AssetBrowser.AssetBrowserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RizaWpfEditor.AssetBrowser"
             mc:Ignorable="d" 
             xmlns:service="clr-namespace:RizaWpfEditor.Service" 
             xmlns:converter="clr-namespace:RizaWpfEditor.Converters"
             xmlns:sys="clr-namespace:System;assembly=System.Runtime"
             d:DesignHeight="450" d:DesignWidth="800" Background="{DynamicResource DarkSurfaceColor00dpBrush}">

    <UserControl.DataContext>
        <local:AssetBrowserControlViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converter:StringToUriConverter x:Key="StringToUriConverter"/>
        <sys:Boolean x:Key="TRUE">True</sys:Boolean>
        <sys:Boolean x:Key="FALSE">False</sys:Boolean>

        <ContextMenu x:Key="AssetTreeViewContextMenu" Style="{StaticResource CustomContextMenuStyle}" Foreground="{DynamicResource DarkMediumEmphasisTextColorBrush}">
            <MenuItem Header="{Binding Resources.Create, Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CustomMenuItemStyle}">
                <MenuItem Header="{Binding Resources.Folder, Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Command="{Binding CreateFolderCommand,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem.Icon>
                        <Image Source="{Binding Resources.Icon_Add_Folder,Converter={StaticResource StringToUriConverter},Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Opacity="{DynamicResource DarkImageOpacity}"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{Binding Resources.Rename, Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CustomMenuItemStyle}" Command="{Binding RenameCommand,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                <MenuItem.Icon>
                    <Image Source="{Binding Resources.Icon_Rename,Converter={StaticResource StringToUriConverter},Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Opacity="{DynamicResource DarkImageOpacity}"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{Binding Resources.Import, Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CustomMenuItemStyle}" Command="{Binding ImportCommand,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                <MenuItem.Icon>
                    <Image Source="{Binding Resources.Icon_Import,Converter={StaticResource StringToUriConverter},Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Opacity="{DynamicResource DarkImageOpacity}"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </UserControl.Resources>

    <Grid>
        <ToolBar Height="27" VerticalAlignment="Top" d:LayoutOverrides="Height" Style="{DynamicResource CustomToolBarStyle}">
            <TextBox TextWrapping="Wrap" Text="{Binding SearchAssetName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Tag="Search..." Width="120" Style="{DynamicResource CustomWatermarkTextBoxStyle}" Background="{DynamicResource DarkSurfaceColor02dpBrush}" BorderBrush="{DynamicResource DarkSurfaceColor04dpBrush}" Foreground="{DynamicResource DarkHighEmphasisTextColorBrush}"/>
        </ToolBar>
        <Grid Background="{DynamicResource DarkSurfaceColor00dpBrush}" Margin="0,27,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <TreeView x:Name="AssetTreeView" Background="{DynamicResource DarkSurfaceColor01dpBrush}" BorderBrush="{DynamicResource DarkSurfaceColor03dpBrush}"
                  ItemsSource="{Binding DisplayTree.Child,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" 
                  SelectedItemChanged="AssetTreeView_SelectedItemChanged" PreviewMouseDown="AssetTreeView_PreviewMouseDown" MouseMove="AssetTreeView_MouseMove" Drop="AssetTreeView_Drop"
                      Style="{StaticResource CustomTreeViewStyle}">

                <TreeView.Resources>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                        <Setter Property="AllowDrop"  Value="{Binding IsAllowDrop, Mode=OneWay}"/>
                    </Style>
                </TreeView.Resources>


                <TreeView.ContextMenu>
                    <StaticResource ResourceKey="AssetTreeViewContextMenu"/>
                </TreeView.ContextMenu>

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Child}">
                        <StackPanel Orientation="Horizontal">
                            <Image Width="15" Height="15" Opacity="{DynamicResource DarkImageOpacity}" Source="{Binding IconUri, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Text="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="2,0,0,0">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsSubSelected}" Value="True" />
                                                    <Condition Binding="{Binding IsEditMode}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="DarkOrange"/>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsSubSelected}" Value="True" />
                                                    <Condition Binding="{Binding IsEditMode}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsSubSelected}" Value="False" />
                                                    <Condition Binding="{Binding IsEditMode}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="{DynamicResource DarkMediumEmphasisTextColorBrush}"/>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBox x:Name="TreeViewTextbox" Text="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Foreground="Black" IsVisibleChanged="TreeViewTextbox_IsVisibleChanged" LostFocus="TreeViewTextbox_LostFocus" PreviewKeyDown="TreeViewTextbox_PreviewKeyDown">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsSubSelected}" Value="True" />
                                                    <Condition Binding="{Binding IsEditMode}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsSubSelected}" Value="True" />
                                                    <Condition Binding="{Binding IsEditMode}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsSubSelected}" Value="False" />
                                                    <Condition Binding="{Binding IsEditMode}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Left" d:LayoutOverrides="VerticalAlignment" Background="{DynamicResource DarkSurfaceColor01dpBrush}"/>
            <ScrollViewer x:Name="MyScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Style="{DynamicResource CustomScrollViewerStyle}" Margin="5,0,0,0" Grid.Column="1">
                <ItemsControl Width="{Binding ElementName=MyScrollViewer, Path=ViewportWidth}" ItemsSource="{Binding SelectTree.Child,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Left" Background="{DynamicResource DarkSurfaceColor00dpBrush}" BorderBrush="{DynamicResource DarkSurfaceColor01dpBrush}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button x:Name="AssetButton" Width="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                          Height="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" 
                                                Style="{DynamicResource CustomButtonWithImageStyle}" BorderBrush="{DynamicResource DarkSurfaceColor01dpBrush}" Margin="5,5,0,0" Tag="{Binding}" PreviewMouseDoubleClick="AssetButton_PreviewMouseDoubleClick" Background="{DynamicResource DarkSurfaceColor00dpBrush}">
                                <StackPanel Orientation="Vertical">
                                    <Image Source="{Binding ThumbnailUri, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Stretch="UniformToFill" 
                                                        Width="{Binding DataContext.ImageThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                          Height="{Binding DataContext.ImageThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Opacity="{DynamicResource DarkImageOpacity}"/>
                                    <TextBlock Text="{Binding Name,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Foreground="{DynamicResource DarkMediumEmphasisTextColorBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                </StackPanel>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Grid>

    </Grid>
</UserControl>
