<UserControl x:Class="RizaWpfEditor.LogViewer.LogViewerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RizaWpfEditor.LogViewer"
             mc:Ignorable="d" 
             xmlns:core="clr-namespace:RizaEdCore.CoreSystem"
             xmlns:service="clr-namespace:RizaWpfEditor.Service" 
             xmlns:converter="clr-namespace:RizaWpfEditor.Converters"
             d:DesignHeight="450" d:DesignWidth="800" Background="{DynamicResource DarkSurfaceColor00dpBrush}">

    <UserControl.DataContext>
        <local:LogViewerControlViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <converter:StringToUriConverter x:Key="StringToUriConverter"/>
    </UserControl.Resources>

    <Grid Background="{DynamicResource DarkSurfaceColor00dpBrush}">
        <ToolBar Height="28" VerticalAlignment="Top" d:LayoutOverrides="HorizontalAlignment" Style="{DynamicResource CustomToolBarStyle}" Background="{DynamicResource DarkSurfaceColor01dpBrush}">
            <Button Command="{Binding ToggleDisplayLogCommand,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" CommandParameter="{x:Static core:EditorCommon+LogType.Information}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource CustomButtonWithImageStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TargetLog.IsEnableInfomation}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource DarkOrangeAccentColorBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TargetLog.IsEnableInfomation}" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <Button.Content>
                    <Image Source="{Binding Resources.Icon_Info,Converter={StaticResource StringToUriConverter},Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}"  Opacity="{DynamicResource DarkImageOpacity}"/>
                </Button.Content>
            </Button>
            <Label Content="{Binding TargetLog.InfoCount,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Foreground="{DynamicResource DarkMediumEmphasisTextColorBrush}" Margin="0,-4,0,0"/>

            <Button Command="{Binding ToggleDisplayLogCommand,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" CommandParameter="{x:Static core:EditorCommon+LogType.Warning}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource CustomButtonWithImageStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TargetLog.IsEnableWarning}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource DarkOrangeAccentColorBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TargetLog.IsEnableWarning}" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <Button.Content>
                    <Image Source="{Binding Resources.Icon_Warning,Converter={StaticResource StringToUriConverter},Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}"  Opacity="{DynamicResource DarkImageOpacity}"/>
                </Button.Content>
            </Button>
            <Label Content="{Binding TargetLog.WarningCount,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Foreground="{DynamicResource DarkMediumEmphasisTextColorBrush}" Margin="0,-4,0,0"/>

            <Button Command="{Binding ToggleDisplayLogCommand,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" CommandParameter="{x:Static core:EditorCommon+LogType.Error}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource CustomButtonWithImageStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TargetLog.IsEnableError}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource DarkOrangeAccentColorBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TargetLog.IsEnableError}" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <Button.Content>
                    <Image Source="{Binding Resources.Icon_Error,Converter={StaticResource StringToUriConverter},Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}"  Opacity="{DynamicResource DarkImageOpacity}"/>
                </Button.Content>
            </Button>
            <Label Content="{Binding TargetLog.ErrorCount,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Foreground="{DynamicResource DarkMediumEmphasisTextColorBrush}" Margin="0,-4,0,0"/>

            <Separator Background="{DynamicResource DarkSurfaceColor24dpBrush}" Margin="5,2,2,2"/>
            <Button Style="{StaticResource CustomButtonWithImageStyle}" Command="{Binding ClearLogCommand,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Margin="3,0,0,0">
                <Image Source="{Binding Resources.Icon_Broom,Converter={StaticResource StringToUriConverter},Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}"  Opacity="{DynamicResource DarkImageOpacity}"/>
            </Button>
        </ToolBar>
        <ListBox Style="{DynamicResource CustomListBoxStyle}" ItemsSource="{Binding TargetLog.DisplayLogs,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Margin="0,54,0,0" BorderBrush="{DynamicResource DarkSurfaceColor01dpBrush}">
            <ListBox.Background>
                <SolidColorBrush Color="Transparent" />
            </ListBox.Background>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="24" Height="24" Opacity="{DynamicResource DarkImageOpacity}">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="Information">
                                            <Setter Property="Source" Value="{Binding Resources.Icon_Info,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,Source={x:Static service:ResourceService.Current}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Warning">
                                            <Setter Property="Source" Value="{Binding Resources.Icon_Warning,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,Source={x:Static service:ResourceService.Current}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Error">
                                            <Setter Property="Source" Value="{Binding Resources.Icon_Error,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,Source={x:Static service:ResourceService.Current}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock Margin="3,3,0,0">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="Information">
                                            <Setter Property="Text" Value="{Binding Message,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                                            <Setter Property="Foreground"  Value="{DynamicResource DarkMediumEmphasisTextColorBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Warning">
                                            <Setter Property="Text" Value="{Binding Message,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                                            <Setter Property="Foreground"  Value="{DynamicResource DarkYellowAccentColorBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Error">
                                            <Setter Property="Text" Value="{Binding Message,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                                            <Setter Property="Foreground"  Value="{DynamicResource DarkErrorColorBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <TextBox Height="22" Margin="0,32,27,0" TextWrapping="Wrap" Text="{Binding CommandInput,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" d:LayoutOverrides="HorizontalAlignment, Height" Background="{DynamicResource DarkSurfaceColor02dpBrush}" BorderBrush="{DynamicResource DarkSurfaceColor03dpBrush}" Foreground="{DynamicResource DarkMediumEmphasisTextColorBrush}"/>
        <Button Height="22" Margin="0,32,0,0" Style="{DynamicResource CustomButtonWithImageStyle}" Background="{DynamicResource Button.Static.Background}" BorderBrush="{DynamicResource Button.Static.Border}" VerticalAlignment="Top" d:LayoutOverrides="Height" HorizontalAlignment="Right" Width="27" Command="{Binding PlayConsoleCommand,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding CommandInput,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
            <Image Source="{Binding Resources.Icon_Play,Converter={StaticResource StringToUriConverter},Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}"  Opacity="{DynamicResource DarkImageOpacity}"/>
        </Button>
    </Grid>
</UserControl>
