<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RizaWpfEditor.Main"
        xmlns:windowsystem="clr-namespace:RizaEdCore.WindowSystem"
        xmlns:service="clr-namespace:RizaWpfEditor.Service" 
        xmlns:command="clr-namespace:RizaWpfEditor.Commands" 
        x:Class="RizaWpfEditor.Main.MainWindow"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        xmlns:converter="clr-namespace:RizaWpfEditor.Converters"
        xmlns:panes="clr-namespace:RizaWpfEditor.Panes"
        xmlns:logviewer="clr-namespace:RizaWpfEditor.LogViewer"
        xmlns:assetbrowser="clr-namespace:RizaWpfEditor.AssetBrowser"
        xmlns:startpage="clr-namespace:RizaWpfEditor.StartPage"
        xmlns:layout="clr-namespace:RizaWpfEditor.Layout"
        mc:Ignorable="d"
        Title="{Binding Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
        Height="{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
        Width="{Binding Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
        Background="{DynamicResource DarkSurfaceColor00dpBrush}" 
        WindowState="{Binding State,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" 
        MinWidth="{Binding MinWidth, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
        MinHeight="{Binding MinHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
        Closing="Window_Closing"
        SizeChanged="Window_SizeChanged">

    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="{x:Static SystemParameters.CaptionHeight}"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                     />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <converter:ActiveContentConverter x:Key="ActiveContentConverter"/>
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converter:StringToUriConverter x:Key="StringToUriConverter"/>
        <sys:Boolean x:Key="TRUE">True</sys:Boolean>
        <sys:Boolean x:Key="FALSE">False</sys:Boolean>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Command="{x:Static command:EditorCommand.OpenProjectWizardCommand}" Gesture="Ctrl+Shift+N" />
        <KeyBinding Command="{x:Static command:EditorCommand.OpenProjectCommand}" Gesture="Ctrl+Shift+O" />
    </Window.InputBindings>

    <Grid Background="{DynamicResource DarkSurfaceColor00dpBrush}">
        <Image Margin="0,-1,0,0" Source="{Binding IconUri, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Height="25" HorizontalAlignment="Left" Width="25" VerticalAlignment="Top"/>
        <StackPanel x:Name="TopStackPanel" Height="22" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome ="False"  MouseLeftButtonDown="TopStackPanel_MouseLeftButtonDown" MouseMove="TopStackPanel_MouseMove" Orientation="Horizontal" Margin="295,0,141,0" FlowDirection="RightToLeft" d:LayoutOverrides="HorizontalAlignment">
            <Label Content="{Binding Title, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontFamily="Yu Gothic UI Semibold" Foreground="{DynamicResource DarkMediumEmphasisTextColorBrush}" Background="{DynamicResource DarkSurfaceColor01dpBrush}" Height="24" FlowDirection="LeftToRight" Margin="50,0,0,0"/>
        </StackPanel>
        <Button x:Name="MinimizationButton" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome ="True" Margin="0,0,94,0" ToolTip="Minimization" VerticalAlignment="Top" Width="47" Height="25" Click="MinimizationButton_Click"  d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" Background="{DynamicResource DarkSurfaceColor00dpBrush}" BorderBrush="{DynamicResource DarkSurfaceColor00dpBrush}" Opacity="{DynamicResource DarkImageOpacity}">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CustomButtonWithImageStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDialogMode}" Value="True">
                            <!--if you disable visibility of tooltip, the button mouse judgment will also disappear, so use that.-->
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsDialogMode}" Value="False">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Image Source="{Binding MinimizeImageUri, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <Image.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDialogMode}" Value="True">
                                <Setter Property="UIElement.Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Button>
        <Button x:Name="MaximizeButton" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome ="True" Margin="0,0,47,0" VerticalAlignment="Top" Width="47" Height="25" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" BorderBrush="{DynamicResource DarkSurfaceColor00dpBrush}" Background="{DynamicResource DarkSurfaceColor00dpBrush}"
                 Click="MaximizeButton_Click" Opacity="{DynamicResource DarkImageOpacity}">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CustomButtonWithImageStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDialogMode}" Value="True">
                            <!--if you disable visibility of tooltip, the button mouse judgment will also disappear, so use that.-->
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsDialogMode}" Value="False">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Image>
                <Image.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDialogMode}" Value="True">
                                <Setter Property="UIElement.Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMaximize}" Value="True">
                                <Setter Property="Image.Source" Value="{Binding RestoreImageUri, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter Property="FrameworkElement.ToolTip" Value="Restore"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMaximize}" Value="False">
                                <Setter Property="Image.Source" Value="{Binding MaximizeImageUri, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter Property="FrameworkElement.ToolTip" Value="Maximize"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Button>
        <Button x:Name="CloseButton" HorizontalAlignment="Right" Style="{StaticResource CustomButtonWithImageStyle}"  WindowChrome.IsHitTestVisibleInChrome ="True" VerticalAlignment="Top" Width="47" Height="25" ToolTip="Close" Click="CloseButton_Click"  d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" Background="{DynamicResource DarkSurfaceColor00dpBrush}" BorderBrush="{DynamicResource DarkSurfaceColor00dpBrush}" Opacity="{DynamicResource DarkImageOpacity}">
            <Image Source="{Binding CloseImageUri, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Button>

        <Menu WindowChrome.IsHitTestVisibleInChrome="True" Background="{DynamicResource DarkSurfaceColor00dpBrush}" Foreground="{DynamicResource DarkMediumEmphasisTextColorBrush}" Margin="26,0,710,609">
            <MenuItem Style="{DynamicResource CustomMenuItemStyle}" Header="{Binding Resources.File_NoKey, Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Height="22">
                <MenuItem Header="{Binding Resources.NewProject, Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" InputGestureText="Ctrl+Shift+N"
                         Command="{x:Static command:EditorCommand.OpenProjectWizardCommand}">
                    <MenuItem.Icon>
                        <Image Source="{Binding Resources.Icon_Add_Project,Converter={StaticResource StringToUriConverter},Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Opacity="{DynamicResource DarkImageOpacity}" Stretch="UniformToFill"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Binding Resources.OpenProjectMenu, Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" InputGestureText="Ctrl+Shift+O"
                          Command="{x:Static command:EditorCommand.OpenProjectCommand}">

                </MenuItem>
            </MenuItem>
            <MenuItem Style="{DynamicResource CustomMenuItemStyle}" Header="{Binding Resources.Game_NoKey, Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Height="22">
                <MenuItem Header="MenuItem"/>
            </MenuItem>
            <MenuItem Style="{DynamicResource CustomMenuItemStyle}" Header="{Binding Resources.Tools_NoKey, Mode=OneWay, Source={x:Static service:ResourceService.Current}}" Foreground="{DynamicResource DarkMediumEmphasisTextColorBrush}" Height="22">
                <MenuItem Header="{Binding Resources.LogViewer, Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}"
                         Command="{Binding OpenLogViewerCommand,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem.Icon>
                        <Image Source="{Binding Resources.Icon_View_Desktop,Converter={StaticResource StringToUriConverter},Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Opacity="{DynamicResource DarkImageOpacity}" Stretch="UniformToFill"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Style="{DynamicResource CustomMenuItemStyle}" Header="{Binding Resources.Help_NoKey, Mode=OneWay, Source={x:Static service:ResourceService.Current}, UpdateSourceTrigger=PropertyChanged}" Height="22">
                <MenuItem Header="MenuItem"/>
            </MenuItem>
        </Menu>

        <Grid Margin="0,22,0,0" Background="{DynamicResource DarkSurfaceColor00dpBrush}">


            <DockingManager x:Name="DockingMgr"
                           AllowMixedOrientation="True"
                           BorderThickness="1" Background="{DynamicResource DarkSurfaceColor00dpBrush}"
                        AnchorablesSource="{Binding Anchorables}"
			            DocumentsSource="{Binding Documents}"
                        ActiveContent="{Binding ActiveContent, Converter={StaticResource ActiveContentConverter}, Mode=TwoWay}"
                        Grid.Row="1">
                <DockingManager.Theme>
                    <MetroTheme/>
                </DockingManager.Theme>

                <DockingManager.LayoutItemTemplateSelector>
                    <panes:PanesTemplateSelector>
                        <panes:PanesTemplateSelector.StartPagePaneTemplate>
                            <DataTemplate>
                                <startpage:StartPageControl/>
                            </DataTemplate>
                        </panes:PanesTemplateSelector.StartPagePaneTemplate>
                        <panes:PanesTemplateSelector.LogViewerPaneTemplate>
                            <DataTemplate>
                                <logviewer:LogViewerControl/>
                            </DataTemplate>
                        </panes:PanesTemplateSelector.LogViewerPaneTemplate>
                        <panes:PanesTemplateSelector.AssetBrowserPaneTemplate>
                            <DataTemplate>
                                <assetbrowser:AssetBrowserControl/>
                            </DataTemplate>
                        </panes:PanesTemplateSelector.AssetBrowserPaneTemplate>
                    </panes:PanesTemplateSelector>
                </DockingManager.LayoutItemTemplateSelector>

                <DockingManager.LayoutItemContainerStyleSelector>
                    <panes:PanesStyleSelector>
                        <panes:PanesStyleSelector.AnchorableStyle>
                            <Style TargetType="{x:Type LayoutAnchorableItem}">
                                <Setter Property="Title" Value="{Binding Model.Title}" />
                                <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                                <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                                <Setter Property="Visibility" Value="{Binding Model.IsVisible, ConverterParameter={StaticResource FALSE}, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}" />
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                                <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                            </Style>
                        </panes:PanesStyleSelector.AnchorableStyle>
                        <panes:PanesStyleSelector.DocumentStyle>
                            <Style TargetType="{x:Type LayoutItem}">
                                <Setter Property="Title" Value="{Binding Model.Title}" />
                                <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                                <Setter Property="ToolTip" Value="{Binding Model.FilePath}" />
                                <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                                <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            </Style>
                        </panes:PanesStyleSelector.DocumentStyle>
                    </panes:PanesStyleSelector>
                </DockingManager.LayoutItemContainerStyleSelector>

                <DockingManager.LayoutUpdateStrategy>
                    <layout:LayoutInitializer />
                </DockingManager.LayoutUpdateStrategy>

                <LayoutRoot x:Name="_layoutRoot">
                    <LayoutPanel Orientation="Horizontal">
                        <LayoutDocumentPane x:Name="CenterDocument"/>
                    </LayoutPanel>
                </LayoutRoot>
            </DockingManager>
        </Grid>
    </Grid>
</Window>
